// Records the histogram of JavaScript function execution.

config = {
    max_map_keys = 50000;
}

usdt:./target/release/nova_cli:nova_vm:builtin_call_start {
    @builtin_calls[arg1] = (str(arg0), nsecs(monotonic));
}
usdt:./target/release/nova_cli:nova_vm:builtin_constructor_start {
    @builtin_constructors[arg1] = (str(arg0), nsecs(monotonic));
}
usdt:./target/release/nova_cli:nova_vm:javascript_call_start {
    @javascript_calls[arg1] = (str(arg0), nsecs(monotonic));
}
usdt:./target/release/nova_cli:nova_vm:javascript_constructor_start {
    @javascript_constructors[arg1] = (str(arg0), nsecs(monotonic));
}

usdt:./target/release/nova_cli:nova_vm:builtin_call_done /has_key(@builtin_calls, arg0)/ {
    $done = nsecs(monotonic);
    $start = @builtin_calls[arg0];
    delete(@builtin_calls[arg0]);
    $duration = $done - $start.1;
    @results[$start.0] = hist($duration / 1000000);
}
usdt:./target/release/nova_cli:nova_vm:builtin_constructor_done /has_key(@builtin_constructors, arg0)/ {
    $done = nsecs(monotonic);
    $start = @builtin_constructors[arg0];
    delete(@builtin_constructors[arg0]);
    $duration = $done - $start.1;
    @results[$start.0] = hist($duration / 1000000);
}
usdt:./target/release/nova_cli:nova_vm:javascript_call_done /has_key(@javascript_calls, arg0)/ {
    $done = nsecs(monotonic);
    $start = @javascript_calls[arg0];
    delete(@javascript_calls[arg0]);
    $duration = $done - $start.1;
    @results[$start.0] = hist($duration / 1000000);
}
usdt:./target/release/nova_cli:nova_vm:javascript_constructor_done /has_key(@javascript_constructors, arg0)/ {
    $done = nsecs(monotonic);
    $start = @javascript_constructors[arg0];
    delete(@javascript_constructors[arg0]);
    $duration = $done - $start.1;
    @results[$start.0] = hist($duration / 1000000);
}

usdt:./target/release/nova_cli:nova_vm:eval_evaluation_start,
usdt:./target/release/nova_cli:nova_vm:job_evaluation_start,
usdt:./target/release/nova_cli:nova_vm:module_evaluation_start,
usdt:./target/release/nova_cli:nova_vm:script_evaluation_start {
  @eval[arg0] = nsecs(monotonic);
}

usdt:./target/release/nova_cli:nova_vm:eval_evaluation_done /has_key(@eval, arg0)/ {
    $done = nsecs(monotonic);
    $start = @eval[arg0];
    delete(@eval[arg0]);
    @results["::eval"] = hist(($done - $start) / 100000);
}
usdt:./target/release/nova_cli:nova_vm:job_evaluation_done /has_key(@eval, arg0)/ {
    $done = nsecs(monotonic);
    $start = @eval[arg0];
    delete(@eval[arg0]);
    @results["::promise"] = hist(($done - $start) / 100000);
}
usdt:./target/release/nova_cli:nova_vm:module_evaluation_done /has_key(@eval, arg0)/ {
    $done = nsecs(monotonic);
    $start = @eval[arg0];
    delete(@eval[arg0]);
    @results["::module"] = hist(($done - $start) / 100000);
}
usdt:./target/release/nova_cli:nova_vm:script_evaluation_done /has_key(@eval, arg0)/ {
    $done = nsecs(monotonic);
    $start = @eval[arg0];
    delete(@eval[arg0]);
    @results["::script"] = hist(($done - $start) / 100000);
}

usdt:./target/release/nova_cli:nova_vm:gc_start {
    @gc_start = nsecs(monotonic);
}

usdt:./target/release/nova_cli:nova_vm:gc_done {
    @results["::gc"] = hist((nsecs(monotonic) - @gc_start) / 100000);
}

END {
    clear(@builtin_calls);
    clear(@builtin_constructors);
    clear(@javascript_calls);
    clear(@javascript_constructors);
    clear(@eval);
    clear(@gc_start);
}
